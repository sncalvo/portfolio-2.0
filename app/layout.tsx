import './css/style.css'

import { Inter } from 'next/font/google'
import localFont from 'next/font/local'
import Theme from './theme-provider'
import SideNavigation from '@/components/ui/side-navigation'
import Header from '@/components/ui/header'

import clsx from 'clsx';

import Script from 'next/script'

import { Analytics } from "@vercel/analytics/next";
import { SpeedInsights } from "@vercel/speed-insights/next";
import Footer from '@/components/ui/footer'

const inter = Inter({
  subsets: ['latin'],
  variable: '--font-inter',
  display: 'swap'
})

const aspekta = localFont({
  src: [
    {
      path: '../public/fonts/Aspekta-500.woff2',
      weight: '500',
    },
    {
      path: '../public/fonts/Aspekta-650.woff2',
      weight: '650',
    },
  ],
  variable: '--font-aspekta',
  display: 'swap',
})

const structuredData = {
  "@context": "https://schema.org",
  "@type": "Person",
  url: process.env.NEXT_PUBLIC_SITE_URL,
  name: "Santi Calvo",
  sameAs: ["https://x.com/santi_c_dev"],
};

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <html lang="en" suppressHydrationWarning>{/* suppressHydrationWarning: https://github.com/vercel/next.js/issues/44343 */}
      <Analytics />
      <SpeedInsights />

      <body className={clsx(
        inter.variable,
        aspekta.variable,
        'font-inter antialiased bg-white bg-gradient-to-r from-white to-slate-200 text-slate-800',
        'dark:bg-slate-900 dark:text-slate-200 dark:bg-gradient-to-r dark:from-slate-900 dark:to-slate-800',
        'tracking-tight'
      )}>
        <Theme>
          <div className="max-w-7xl mx-auto">
            <div className="min-h-screen flex md:flex-row flex-col">
              <SideNavigation />

              <main className="grow overflow-hidden px-6">
                <div className="w-full h-full max-w-[1072px] mx-auto flex flex-col">
                  <Header />

                  {children}

                  <Footer />
                </div>
              </main>
            </div>
          </div>
        </Theme>
        <Script
          key="structured-data"
          id="structured-data"
          type="application/ld+json"
          strategy="beforeInteractive"
          dangerouslySetInnerHTML={{
            __html: JSON.stringify(structuredData),
          }}
        />
      </body>
    </html>
  )
}
